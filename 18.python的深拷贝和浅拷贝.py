import copy
a=[1,2,3]
b=a
print("初始值")
print("a:",a)
print("b:",b)
print("a=[4,5,6]")
a=[4,5,6]
print("a:",a)
print("b:",b)
print("###################")
print("初始值")
a=[1,2,3]
b=a
print("a:",a)
print("b:",b)
print("a[0],a[1],[2]=4,5,6")
a[0],a[1],a[2]=4,5,6
print("a:",a)
print("b:",b)
print("###################")
print("接下来是深度赋值和浅度赋值")
print("初始值")
a=[1,2,[3,4]]
b=copy.copy(a)
c=copy.deepcopy(a)
print("a:",a)
print("b:",b)
print("c:",c)
print("a[2]=hey")
a[2]="hey"
print("a:",a)
print("浅度b:",b)
print("深度c:",c)
print("这里可以看到深赋值没有改变,然而浅赋值也没变化,这是因为a的list层次不复杂")
print("---------------------")
print("接下来是深度赋值和浅度赋值")
print("初始值")
a=[1,2,[3,4]]
b=copy.copy(a)
c=copy.deepcopy(a)
print("a:",a)
print("b:",b)
print("c:",c)
print("a[2][0]=hey")
a[2][0]="hey"
print("a:",a)
print("浅度b:",b)
print("深度c:",c)
print("这里可以看到深赋值没有改变,然而浅赋值改变了")
print("这里也可以看出来,深度赋值已经是一个新的list的勒")
#copy和deepcopy：浅拷贝会将复杂的嵌套序列设置为一个镜像的引用，而深拷贝会将嵌套
#的序列的每一层做成一个单独的个体
